{"version":3,"file":"static/js/916.cd9c178e.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"__VERSION__\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.count = 0;\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this.count++;\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n    }\n    teardown() {\n        this.notifyFinished();\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForced = false) {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForced);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n        /**\n         * TODO: In a breaking change, we should replace this with `.notifyCancel()`\n         */\n        this.animation.oncancel = () => this.notifyFinished();\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!motionValue ||\n        !motionValue.owner ||\n        !(motionValue.owner.current instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            else {\n                this.keyframeResolver?.cancel();\n            }\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        this.animation.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { transformPropOrder } from 'motion-dom';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","getValueTransition","transition","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","length","add","cancel","delete","process","frameData","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","Math","max","min","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","transformPropOrder","transformProps","positionalKeys","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","constructor","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","init","_this","options","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","addDependent","removeDependent","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isKeyframesTarget","Array","isArray","setMotionValue","hasValue","getValue","addValue","isMotionValue","Boolean","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","combineFunctions","pipe","_len","transformers","_key","clamp","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","layout","mainThread","waapi","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","split","trim","number","parse","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","_ref","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","map","hueToRgb","p","q","t","mixImmediate","mixNumber","from","to","progress","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","keyframes","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","count","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","holdTime","playbackSpeed","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","paddingLeft","paddingRight","height","_ref3","_ref4","paddingTop","paddingBottom","top","_bbox","_ref5","left","_ref6","bottom","_ref7","_ref8","right","_ref9","_ref0","_ref1","_ref10","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","window","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","resume","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","oncancel","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","HTMLElement","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","assign","shouldSkip","skipAnimations","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","resolved","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","compareByDepth","depth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","perspective","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","svgMotionConfig","createMotionComponentFactory","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion","createDomVisualElement"],"sourceRoot":""}