{"version":3,"file":"static/js/396.cf8769b7.chunk.js","mappings":"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","sources":["components/ClientTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../styles/n2.css';\nimport { motion } from 'framer-motion';\n\nfunction ClientTable({ searchParams }) {\n  const [clients, setClients] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [showDetails, setShowDetails] = useState(false);\n  const [showTransfer, setShowTransfer] = useState(false);\n  const [showCloseConfirm, setShowCloseConfirm] = useState(false);\n  const [clientToClose, setClientToClose] = useState(null);\n\n  useEffect(() => {\n    const fetchClients = async () => {\n      const query = new URLSearchParams(searchParams).toString();\n      const url = query\n        ? `https://bankapplication-5y36.onrender.com/api/clients/search?${query}`\n        : `https://bankapplication-5y36.onrender.com/api/clients`;\n\n      const res = await fetch(url);\n      const data = await res.json();\n      setClients(data);\n    };\n\n    fetchClients();\n  }, [searchParams]);\n\n  const fetchClientDetails = async (account) => {\n    const res = await fetch(`https://bankapplication-5y36.onrender.com/api/clients/${account}`);\n    const data = await res.json();\n    setSelectedClient(data);\n    setShowDetails(true);\n  };\n\n  const handleCloseAccount = async () => {\n    try {\n      const response = await fetch(\n        `https://bankapplication-5y36.onrender.com/api/clients/${clientToClose}/close`,\n        { method: 'PATCH' }\n      );\n      if (response.ok) {\n        // Update local state to reflect the change\n        setClients(clients.map(client => \n          client.account === clientToClose \n            ? { ...client, status: 'disabled' } \n            : client\n        ));\n      }\n      setShowCloseConfirm(false);\n    } catch (err) {\n      console.error('Error closing account:', err);\n    }\n  };\n\n  return (\n    <motion.div\n      className=\"table-wrapper\"\n      layout\n      initial={{ opacity: 0, y: 5 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.4 }}\n    >\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr className=\"table-header\">\n              <th className=\"row-header-name\">Name</th>\n              <th className=\"row-header-birthday\">Birthday</th>\n              <th className=\"row-header-type\">Type</th>\n              <th className=\"row-header-account\">Account</th>\n              <th className=\"row-header-balance\">Balance</th>\n              <th className=\"row-header-actions\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {clients.map((client, idx) => (\n              <tr\n                key={idx}\n                className={idx % 2 === 0 ? 'row-background-odd' : 'row-background-even'}\n              >\n                <td className=\"col-name\">{client.name}</td>\n                <td className=\"col-birthday\">{client.birthday}</td>\n                <td className=\"col-type\">{client.type}</td>\n                <td className=\"col-account\">{client.account}</td>\n                <td className=\"col-balance\">${client.balance.toFixed(2)}</td>\n                <td className=\"col-actions\">\n                  <button \n                    className=\"action-link\"\n                    onClick={() => fetchClientDetails(client.account)}\n                  >\n                    Details\n                  </button>\n                  <span> | </span>\n                  <button \n                    className=\"action-link\"\n                    onClick={() => setShowTransfer(true)}\n                  >\n                    Transfer\n                  </button>\n                  <span> | </span>\n                  <button \n                    className=\"action-link\"\n                    onClick={() => {\n                      setClientToClose(client.account);\n                      setShowCloseConfirm(true);\n                    }}\n                    disabled={client.status === 'disabled'}\n                  >\n                    Close Account\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Client Details Popup */}\n      {showDetails && selectedClient && (\n        <div className=\"popup-overlay\">\n          <div className=\"client-details-popup\">\n            <div className=\"popup-header\">\n              <h3>Client Details</h3>\n              <button onClick={() => setShowDetails(false)}>X</button>\n            </div>\n            <div className=\"popup-content\">\n              <div className=\"detail-row\">\n                <span className=\"detail-label\">Name:</span>\n                <span>{selectedClient.name}</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label\">Account:</span>\n                <span>{selectedClient.account}</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label\">Balance:</span>\n                <span>${selectedClient.balance.toFixed(2)}</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label\">Email:</span>\n                <span>{selectedClient.email}</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label\">Phone:</span>\n                <span>{selectedClient.phoneNumber}</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label\">Status:</span>\n                <span>{selectedClient.status}</span>\n              </div>\n              <div className=\"detail-row\">\n                <span className=\"detail-label\">Member Since:</span>\n                <span>{selectedClient.member_since}</span>\n              </div>\n              {/* Add more fields as needed */}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Transfer Popup */}\n      {showTransfer && (\n        <div className=\"popup-overlay\">\n          <div className=\"transfer-popup\">\n            <div className=\"popup-header\">\n              <h3>Transfer Account</h3>\n              <button onClick={() => setShowTransfer(false)}>X</button>\n            </div>\n            <div className=\"popup-content\">\n              <p>Only regional managers can transfer accounts.</p>\n              <p>Please contact admin department for access.</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Close Account Confirmation */}\n      {showCloseConfirm && (\n        <div className=\"popup-overlay\">\n          <div className=\"confirm-popup\">\n            <div className=\"popup-header\">\n              <h3>Confirm Account Closure</h3>\n              <button onClick={() => setShowCloseConfirm(false)}>X</button>\n            </div>\n            <div className=\"popup-content\">\n              <p>Are you sure you want to close this account?</p>\n              <div className=\"button-group\">\n                <button \n                  className=\"confirm-button\"\n                  onClick={handleCloseAccount}\n                >\n                  Confirm\n                </button>\n                <button \n                  className=\"cancel-button\"\n                  onClick={() => setShowCloseConfirm(false)}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </motion.div>\n  );\n}\n\nexport default ClientTable;"],"names":["_ref","searchParams","clients","setClients","useState","selectedClient","setSelectedClient","showDetails","setShowDetails","showTransfer","setShowTransfer","showCloseConfirm","setShowCloseConfirm","clientToClose","setClientToClose","useEffect","async","query","URLSearchParams","toString","url","res","fetch","data","json","fetchClients","_jsxs","motion","div","className","layout","initial","opacity","y","animate","transition","duration","children","_jsx","map","client","idx","name","birthday","type","account","balance","toFixed","onClick","fetchClientDetails","disabled","status","email","phoneNumber","member_since","method","ok","err","console","error"],"sourceRoot":""}